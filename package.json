{
  "name": "api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "migrate": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:migrate  --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE --debug",
    "seed": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:seed:all --debug --seed-compiled-path ./seeder --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "migrate:undo": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:migrate:undo  --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "seed:undo": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:seed:undo --seed-compiled-path ./seeder --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "seed:undo:all": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:seed:undo:all --seed-compiled-path ./seeder --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "migrate:undo:all": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:migrate:undo:all  --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "migrate:status": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize db:migrate:status  --url mysql://$MYSQL_USER:$MYSQL_PASSWORD@$MYSQL_HOST:${MYSQL_PORT:-3306}/$MYSQL_DATABASE",
    "migration:generate": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize migration:generate",
    "seed:generate": "./node_modules/.bin/ts-node ./node_modules/.bin/sequelize seed:generate",
    "reset:database": "npm run migrate:undo:all && npm run migrate && npm run seed"
  },
  "dependencies": {
    "@nestjs/axios": "^0.0.5",
    "@nestjs/common": "^8.3.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/sequelize": "^8.0.0",
    "@nestjs/swagger": "5.0.9",
    "@nestjs/typeorm": "^8.0.3",
    "bcrypt": "^5.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "compression": "^1.7.4",
    "mysql2": "^2.3.3",
    "node-simple-validator": "^2.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "sequelize": "^6.16.1",
    "sequelize-cli": "^6.4.1",
    "sequelize-typescript": "^2.1.2",
    "swagger": "^0.7.5",
    "swagger-ui-express": "^4.3.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.7.2",
    "@types/express": "^4.17.13",
    "@types/jest": "27.4.0",
    "@types/node": "^16.0.0",
    "@types/sequelize": "^4.28.11",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.2.5",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
